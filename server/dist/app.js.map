{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./hat/eventFactory.ts","webpack:///./hat/types.ts","webpack:///./index.ts","webpack:///external \"http\"","webpack:///external \"express\"","webpack:///external \"socket.io\"","webpack:///./players/handler.ts","webpack:///./players/player.ts","webpack:///./players/types.ts","webpack:///./players/eventFactory.ts","webpack:///./hat/handler.ts","webpack:///./hat/hat.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","type","payload","HatSocketClientEventEnum","HatSocketHatMasterClientEventEnum","HatSocketServerEventEnum","HatSocketHatMasterServerEventEnum","app","express","server","http","createServer","io","socketIO","path","hh","ph","on","socket","onConnection","_","res","sendStatus","port","process","env","PORT","listen","console","log","require","socketServer","players","hatMaster","undefined","this","currentTurn","addPlayer","id","push","removePlayer","indexToRemove","findIndex","splice","unsetHatMaster","registerPlayer","nickname","find","playerToRegister","setHatMaster","emit","PlayerSocketServerEventEnum","HAT_MASTER","length","event","handleSocketEvent","player","JSON","stringify","PlayerSocketClientEventEnum","REGISTER","onRegister","NEXT_TURN","nextTurn","nextIndex","WAIT","broadcast","YOUR_PICK","REGISTERED","ERROR","message","_nickname","_id","equals","other","isHatOpen","time","hat","PICK","getSubmission","SUBMIT","SUBMISSION_RECEIVED","addSubmission","RESET","SET_THEME","theme","THEME_SET","OPEN_HAT","HAT_OPENED","CLOSE_HAT","HAT_CLOSED","submissions","submission","removeSubmission","index","forPlayer","author"],"mappings":"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","file":"app.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","import { HatSocketEvent } from \"./types\";\n\nexport default function eventFactory (type: HatSocketEvent, payload?: any) {\n  return { type, payload }\n}","export interface ISubmission {\n  author: string\n  value: string\n}\n\nexport interface IHat {\n  theme: string | undefined\n  submissions: ISubmission[]\n}\n\nexport enum HatSocketClientEventEnum {\n  PICK = 'PICK',\n  SUBMIT = 'SUBMIT',\n}\n\nexport enum HatSocketHatMasterClientEventEnum {\n  OPEN_HAT = 'OPEN_HAT',\n  CLOSE_HAT = 'CLOSE_HAT',\n  SET_THEME = 'SET_THEME',\n  SET_TIME = 'SET_TIME',\n  RESET = 'RESET',\n}\n\nexport enum HatSocketServerEventEnum {\n  THEME_SET = 'THEME_SET',\n  TIME_SET = 'TIME_SET',\n  PICK = 'PICK',\n  WAIT = 'WAIT',\n  SUBMISSION_RECEIVED = 'SUBMISSION_RECEIVED',\n  NO_SUBMISSIONS_LEFT = 'NO_SUBMISSIONS_LEFT',\n  ERROR = 'ERROR',\n  RESET = 'RESET',\n  HAT_OPENED = 'HAT_OPENED',\n  HAT_CLOSED = 'HAT_CLOSED',\n}\n\nexport enum HatSocketHatMasterServerEventEnum {}\n\nexport type HatSocketEvent = HatSocketClientEventEnum | HatSocketServerEventEnum |\n  HatSocketHatMasterClientEventEnum | HatSocketHatMasterServerEventEnum\n\nexport type IHatSocketEvent = {\n  type: HatSocketEvent\n  payload?: any\n}","// modules\nimport * as http from 'http'\nimport * as express from 'express'\nimport * as socketIO from 'socket.io'\n\n// types\nimport { Server } from 'http'\nimport { Application, Request, Response } from 'express'\n\n// servers\nconst app: Application = express()\nconst server: Server = http.createServer(app)\nconst io: SocketIO.Server = socketIO(server, {\n  path: '/virtual-hat/socket-io'\n})\n\n// handlers\nimport PlayerHandler from './players/handler'\nimport HatHandler from './hat/handler'\n\nconst hh = new HatHandler(io)\nconst ph = new PlayerHandler(io)\n\nio.on('connection', (socket) => {\n  ph.onConnection(socket)\n  hh.onConnection(socket)\n})\n\napp.get('/', (_: Request, res: Response) => {\n  res.sendStatus(200)\n})\n\nconst port = process.env.PORT || 3001\nserver.listen(port, () => console.log(`I'm listenin on ${port}!`))","module.exports = require(\"http\");","module.exports = require(\"express\");","module.exports = require(\"socket.io\");","import Player from \"./player\";\nimport {\n  IPlayer,\n  IPlayerSocketEvent,\n  PlayerSocketClientEventEnum,\n  PlayerSocketServerEventEnum,\n} from \"./types\";\nimport eventFactory from \"./eventFactory\";\nimport hatEventFactory from \"../hat/eventFactory\";\nimport { HatSocketServerEventEnum } from \"../hat/types\";\n\nexport default class PlayerHandler {\n  currentTurn: number\n  socketServer: SocketIO.Server\n  players: IPlayer[] = []\n  hatMaster: string | undefined = undefined\n\n  constructor (socketServer: SocketIO.Server) {\n    this.socketServer = socketServer\n    this.currentTurn = 0\n  }\n\n  addPlayer (p: IPlayer): boolean {\n    console.log(`Adding new player ${p.id}`)\n    this.players.push(p)\n\n    return true\n  }\n  \n  removePlayer (id: string): boolean {\n    console.log(`Removing player ${id}`)\n    const indexToRemove = this.players.findIndex(({ id: _id }) => _id === id)\n    if (indexToRemove !== -1) {\n      this.players.splice(indexToRemove, 1)\n      if (this.hatMaster === id) {\n        this.unsetHatMaster()\n      }\n      return true\n    }\n    return false\n  }\n\n  registerPlayer (id: string, nickname: string): boolean {\n    console.log(`Registering player ${id} to ${nickname}`)\n    const nnIsTaken = this.players.find(({ nickname: nn }) => nn === nickname)\n    \n    if (!nnIsTaken) {\n      const playerToRegister = this.players.find(({ id: _id }) => _id === id)\n      if (playerToRegister) {\n        playerToRegister.nickname = nickname\n        return true\n      }\n      return false\n    }\n    return false\n  }\n  \n  setHatMaster (socket: SocketIO.Socket) {\n    this.hatMaster = socket.id\n    console.log(`New hat master is ${this.hatMaster}`)\n    socket.emit('player', eventFactory(PlayerSocketServerEventEnum.HAT_MASTER))\n  }\n\n  unsetHatMaster () {\n    this.hatMaster = undefined\n    console.log(`Removed hat master`)\n    if (this.players.length > 0) {\n      this.setHatMaster(this.players[0].socket)\n    }\n  }\n\n  // #region listener functions\n  onConnection (socket: SocketIO.Socket) {\n    socket.on('player', (event: IPlayerSocketEvent) => this.handleSocketEvent(socket, event))\n    socket.on('disconnect', () => this.removePlayer(socket.id))\n    \n    const player = new Player(socket)\n    this.addPlayer(player)\n  }\n\n  handleSocketEvent (socket: SocketIO.Socket, { type, payload }: IPlayerSocketEvent) {\n    console.log(`[PLAYER:${type}] ${JSON.stringify(payload)}`)\n    switch (type) {\n      case PlayerSocketClientEventEnum.REGISTER:\n        this.onRegister(socket, payload); break;\n      case PlayerSocketClientEventEnum.NEXT_TURN:\n        this.nextTurn(socket); break;\n      default: break;\n    }\n  }\n\n  nextTurn (socket: SocketIO.Socket) {\n    const nextIndex = (this.currentTurn) % this.players.length\n    socket.emit('hat', hatEventFactory(HatSocketServerEventEnum.WAIT))\n    socket.broadcast.emit('hat', hatEventFactory(HatSocketServerEventEnum.WAIT))\n    this.players[nextIndex].socket.emit('player', eventFactory(PlayerSocketServerEventEnum.YOUR_PICK))\n  }\n  \n  onRegister (socket: SocketIO.Socket, nickname: string) {\n    const id = socket.id\n    const registered = this.registerPlayer(id, nickname)\n    if (registered) {\n      console.log(`Registered player ${socket.id} to ${nickname}`)\n      socket.emit('player', eventFactory(PlayerSocketServerEventEnum.REGISTERED))\n      if (this.hatMaster === undefined) {\n        this.setHatMaster(socket)\n      }\n    } else {\n      console.log(`${nickname} is taken`)\n      socket.emit('player', eventFactory(PlayerSocketServerEventEnum.ERROR, { message: `${nickname} is taken!` }))\n    }\n  }\n  // #endregion\n}","import { Socket } from 'socket.io'\nimport { IPlayer } from './types'\n\nexport default class Player implements IPlayer {\n  readonly socket: Socket\n  readonly _id: string\n  private _nickname: string | undefined = undefined\n\n  constructor (socket: Socket) {\n    this.socket = socket\n    this._id = socket.id\n  }\n\n  // #region accessors/mutators\n  get nickname (): string | undefined {\n    return this._nickname\n  }\n\n  set nickname (n: string | undefined) {\n    this._nickname = n\n  }\n\n  get id (): string {\n    return this._id\n  }\n\n  equals (other: IPlayer): boolean {\n    return this.id === other.id\n  }\n  // #endregion\n}","export interface IPlayer {\n  readonly socket: SocketIO.Socket\n  readonly id: string\n  nickname?: string\n  equals: (p: IPlayer) => boolean\n}\n\nexport enum PlayerSocketClientEventEnum {\n  REGISTER = 'REGISTER',\n  NEXT_TURN = 'NEXT_TURN'\n}\n\nexport enum PlayerSocketServerEventEnum {\n  REGISTERED = 'REGISTERED',\n  HAT_MASTER = 'HAT_MASTER',\n  YOUR_PICK = 'YOUR_PICK',\n  ERROR = 'ERROR',\n}\n\nexport type PlayerSocketEvent = PlayerSocketClientEventEnum | PlayerSocketServerEventEnum\n\nexport type IPlayerSocketEvent = {\n  type: PlayerSocketEvent\n  payload?: any\n}","import { PlayerSocketEvent } from \"./types\";\n\nexport default function eventFactory (type: PlayerSocketEvent, payload?: any) {\n  return { type, payload }\n}","import Hat from './hat'\nimport { IHatSocketEvent, HatSocketClientEventEnum, HatSocketHatMasterClientEventEnum, HatSocketServerEventEnum } from './types'\nimport eventFactory from './eventFactory'\n\nexport default class HatHandler {\n  socketServer: SocketIO.Server\n  hat: Hat\n  isHatOpen: boolean = false\n  time: number = 120 // seconds\n  \n  constructor (io: SocketIO.Server) {\n    this.socketServer = io\n    this.hat = new Hat()\n\n    this.onConnection = this.onConnection.bind(this)\n  }\n\n  onConnection (socket: SocketIO.Socket) {\n    socket.on('hat', (event: IHatSocketEvent) => this.handleSocketEvent(socket, event))\n  }\n\n  handleSocketEvent (socket: SocketIO.Socket, { type, payload }: IHatSocketEvent) {\n    console.log(`[HAT:${type}] ${JSON.stringify(payload)}`)\n    switch (type) {\n      case HatSocketClientEventEnum.PICK: {\n        socket.broadcast.emit('hat', eventFactory(HatSocketServerEventEnum.WAIT))\n        socket.emit('hat', eventFactory(HatSocketServerEventEnum.PICK, this.hat.getSubmission(socket.id)))\n        break;\n      }\n      case HatSocketClientEventEnum.SUBMIT: {\n        socket.broadcast.emit('hat', eventFactory(HatSocketServerEventEnum.SUBMISSION_RECEIVED))\n        socket.emit('hat', eventFactory(HatSocketServerEventEnum.SUBMISSION_RECEIVED))\n        this.hat.addSubmission(payload)\n        break;\n      }\n      case HatSocketHatMasterClientEventEnum.RESET: {\n        this.hat = new Hat()\n        socket.broadcast.emit('hat', eventFactory(HatSocketServerEventEnum.RESET))\n        socket.emit('hat', eventFactory(HatSocketServerEventEnum.RESET))\n        break;\n      }\n      case HatSocketHatMasterClientEventEnum.SET_THEME: {\n        this.hat.theme = payload\n        socket.broadcast.emit('hat', eventFactory(HatSocketServerEventEnum.THEME_SET, payload))\n        socket.emit('hat', eventFactory(HatSocketServerEventEnum.THEME_SET, payload))\n        break;\n      }\n      case HatSocketHatMasterClientEventEnum.OPEN_HAT: {\n        socket.broadcast.emit('hat', eventFactory(HatSocketServerEventEnum.HAT_OPENED))\n        socket.emit('hat', eventFactory(HatSocketServerEventEnum.HAT_OPENED))\n        break;\n      }\n      case HatSocketHatMasterClientEventEnum.CLOSE_HAT: {\n        socket.broadcast.emit('hat', eventFactory(HatSocketServerEventEnum.HAT_CLOSED))\n        socket.emit('hat', eventFactory(HatSocketServerEventEnum.HAT_CLOSED))\n        break;\n      }\n      default: break;\n    }\n  }\n}","import { IHat, ISubmission } from \"./types\";\n\nexport default class Hat implements IHat {\n  theme: string | undefined\n  submissions: ISubmission[] = []\n\n  addSubmission (submission: ISubmission) {\n    console.log(submission)\n    this.submissions.push(submission)\n  }\n\n  removeSubmission (index: number): ISubmission {\n    console.log(index)\n    return this.submissions.splice(index, 1)[0]\n  }\n\n  getSubmission (forPlayer: string): ISubmission | boolean {\n    if (this.submissions.length === 0) {\n      return false\n    }\n    let index = this.submissions.findIndex(({ author }) => author !== forPlayer)\n    if (index === -1) {\n      index = 0\n    }\n    return this.removeSubmission(index)\n  }\n}"],"sourceRoot":""}